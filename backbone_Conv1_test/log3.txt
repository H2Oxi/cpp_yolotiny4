==43042== Memcheck, a memory error detector
==43042== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==43042== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==43042== Command: ./tst2
==43042== Parent PID: 26960
==43042== 
==43042== Use of uninitialised value of size 8
==43042==    at 0x49BAAEE: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x4984588: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x49918F0: std::istream::read(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x10C1CA: load_int8_data(signed char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long) (tst2.cpp:503)
==43042==    by 0x10B4F7: basic_conv::data_update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (tst2.cpp:302)
==43042==    by 0x10BE91: main (tst2.cpp:448)
==43042==  Uninitialised value was created by a stack allocation
==43042==    at 0x10B3EC: basic_conv::data_update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (tst2.cpp:292)
==43042== 
==43042== Invalid write of size 1
==43042==    at 0x49BAAEE: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x4984588: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x49918F0: std::istream::read(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x10C1CA: load_int8_data(signed char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long) (tst2.cpp:503)
==43042==    by 0x10B4F7: basic_conv::data_update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (tst2.cpp:302)
==43042==    by 0x10BE91: main (tst2.cpp:448)
==43042==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==43042== 
==43042== 
==43042== Process terminating with default action of signal 11 (SIGSEGV)
==43042==  Access not within mapped region at address 0x0
==43042==    at 0x49BAAEE: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x4984588: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x49918F0: std::istream::read(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
==43042==    by 0x10C1CA: load_int8_data(signed char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long) (tst2.cpp:503)
==43042==    by 0x10B4F7: basic_conv::data_update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (tst2.cpp:302)
==43042==    by 0x10BE91: main (tst2.cpp:448)
==43042==  If you believe this happened as a result of a stack
==43042==  overflow in your program's main thread (unlikely but
==43042==  possible), you can try to increase the size of the
==43042==  main thread stack using the --main-stacksize= flag.
==43042==  The main thread stack size used in this run was 16777216.
==43042== 
==43042== HEAP SUMMARY:
==43042==     in use at exit: 602,898 bytes in 11 blocks
==43042==   total heap usage: 20 allocs, 9 frees, 620,777 bytes allocated
==43042== 
==43042== LEAK SUMMARY:
==43042==    definitely lost: 0 bytes in 0 blocks
==43042==    indirectly lost: 0 bytes in 0 blocks
==43042==      possibly lost: 0 bytes in 0 blocks
==43042==    still reachable: 602,898 bytes in 11 blocks
==43042==         suppressed: 0 bytes in 0 blocks
==43042== Reachable blocks (those to which a pointer was found) are not shown.
==43042== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==43042== 
==43042== For lists of detected and suppressed errors, rerun with: -s
==43042== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
